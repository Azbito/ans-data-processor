version: "3.8"

services:
  db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./apps/database:/app/database
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: fastapi_server
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      FASTAPI_ENV: ${FASTAPI_ENV}
      PYTHONPATH: ${PYTHONPATH}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME} 
    volumes:
      - ./apps/api:/app

  frontend:
    build: ./apps/frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./apps/frontend:/app/frontend
      - /app/frontend/node_modules
    env_file: .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - VITE_HMR_PORT=${VITE_HMR_PORT}
    command: npm run dev -- --host 0.0.0.0

volumes:
  pgdata:
